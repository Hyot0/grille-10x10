import tkinter as tk
from tkinter import ttk

def affiche(grille):

    fenetre = tk.Tk()
    fenetre.title("Jeu de la vie")

    taille_carre = 20
    vitesse_base = 1000  # Vitesse de base en millisecondes
    multiplicateur = 10  # Multiplicateur pour le curseur de vitesse
    en_cours = False  # Indique si le jeu est en cours ou non

    canvas = tk.Canvas(fenetre, width=taille_carre*10, height=taille_carre*10, bg='white')
    canvas.pack()

    carres = [[None]*10 for _ in range(10)]

    def changer_couleur(event, i, j):
        if grille[i][j] == 0:
            grille[i][j] = 1
            color = 'black'
        else:
            grille[i][j] = 0
            color = 'white'
        canvas.itemconfig(carres[i][j], fill=color)

    for i in range(10):
        for j in range(10):
            x = j * taille_carre
            y = i * taille_carre
            if grille[i][j] == 0:
                color = 'white'
            else:
                color = 'black'
            carres[i][j] = canvas.create_rectangle(x, y, x + taille_carre, y + taille_carre, fill=color)
            canvas.tag_bind(carres[i][j], '<Button-1>', lambda event, i=i, j=j: changer_couleur(event, i, j))

    # Fonctions pour gérer le jeu de la vie
    def play():
        nonlocal en_cours
        en_cours = True
        mise_a_jour()

    def pause():
        nonlocal en_cours
        en_cours = False

    def adjust_speed(value):
        # Ajuste la vitesse de rafraîchissement en fonction de la valeur du curseur
        nonlocal vitesse_base
        vitesse_base = int(float(value)) * multiplicateur

    def mise_a_jour():
        nonlocal en_cours
        if en_cours:
            nouvelle_grille = [[0]*10 for _ in range(10)]
            for i in range(10):
                for j in range(10):
                    voisins_i = [(i-1)%10, i, (i+1)%10]
                    voisins_j = [(j-1)%10, j, (j+1)%10]
                    somme = sum(grille[x][y] for x in voisins_i for y in voisins_j if (x, y) != (i, j))
                    if grille[i][j] == 1 and somme in [2, 3]:
                        nouvelle_grille[i][j] = 1
                    elif grille[i][j] == 0 and somme == 3:
                        nouvelle_grille[i][j] = 1
            grille[:] = nouvelle_grille[:]
            for i in range(10):
                for j in range(10):
                    color = 'black' if grille[i][j] == 1 else 'white'
                    canvas.itemconfig(carres[i][j], fill=color)
            fenetre.after(vitesse_base, mise_a_jour)

    # Ajout des boutons "play" et "pause"
    play_button = ttk.Button(fenetre, text="Play", command=play)
    play_button.pack(side="left")
    pause_button = ttk.Button(fenetre, text="Pause", command=pause)
    pause_button.pack(side="left")

    # Ajout d'un curseur pour ajuster la vitesse de rafraîchissement
    speed_scale = ttk.Scale(fenetre, from_=1, to=10, orient="horizontal", command=adjust_speed)
    speed_scale.pack()

    fenetre.mainloop()

grille = [[0]*10 for _ in range(10)]
affiche(grille)
